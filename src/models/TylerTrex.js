/*
auto-generated by: https://github.com/pmndrs/gltfjsx
author: Vorsutus (https://sketchfab.com/Crimson42)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/tyler-the-trex-7d4af25b9d94425ba10bc5d527ea4d5f
title: Tyler The Trex
*/
import * as THREE from 'three';
import React, { useRef, useState, useEffect } from 'react';
import { useFrame } from 'react-three-fiber';
import { useGLTF } from '@react-three/drei/useGLTF';
import { useTexture } from '@react-three/drei';

export default (props) => {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF('/models/dino/scene.gltf');

  const texture = useTexture(
    '/models/dino/textures/TylerTeethEyes_diffuse.png'
  );

  const actions = useRef();
  const [mixer] = useState(() => new THREE.AnimationMixer());
  useFrame((state, delta) => mixer.update(delta));
  useEffect(() => {
    actions.current = {
      'Tyler@Fishing': mixer.clipAction(animations[0], group.current),
      'Tyler@Idle': mixer.clipAction(animations[1], group.current),
      'Tyler@Talking': mixer.clipAction(animations[2], group.current),
      'Tyler@Walking': mixer.clipAction(animations[3], group.current),
    };
    actions.current['Tyler@Idle'].play();
    return () => animations.forEach((clip) => mixer.uncacheClip(clip));
  }, []);
  return (
    <group
      rotation={[0, Math.PI / 2, 0]}
      ref={group}
      {...props}
      scale={[0.25, 0.25, 0.25]}>
      <primitive object={nodes._rootJoint} />
      <skinnedMesh
        material={materials.TylerTeethEyes}
        geometry={nodes.TylerMesh_TylerTeethEyes_0.geometry}
        skeleton={nodes.TylerMesh_TylerTeethEyes_0.skeleton}>
        <meshPhongMaterial attach='material' map={texture} skinning />
      </skinnedMesh>
      <skinnedMesh
        material={materials.TylerSkin}
        geometry={nodes.TylerMesh_TylerSkin_0.geometry}
        skeleton={nodes.TylerMesh_TylerSkin_0.skeleton}>
        <meshPhongMaterial attach='material' map={texture} skinning />
      </skinnedMesh>
    </group>
  );
};

useGLTF.preload('/models/dino/scene.gltf');
